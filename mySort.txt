# Gnome Sort

In the gnome sort, a index is created to keep track of the position of where it is the array it is sorting through. While the index is smaller than the shape length, it begins to compare the shapes that are beside each other. If the index is 0 then it is increased by 1 to begin comparing the index of the second shape with the element previous of it(The previous shape of the second would be the first aka index of 0). If the shape infront of the first one is larger then the index will move to the next shape to compare that and the previous. If it is smaller then it will move the shape the index is currently on and swap it with the previous one. It repeats this making sure to go back and check each previous shape after swapping to ensure that the shortest shape will be placed behind the longer one until properly sorted. The time complexity on average is O(N^2) despite being in only 1 loop but if the array is nearly sorted it is more like O(N) as going back to sort through the array drastically increases the time. 
